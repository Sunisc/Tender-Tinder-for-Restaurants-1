{"version":3,"sources":["components/Search/Search.js","components/Menubar.js","components/Popup.js","components/BlacklistButton.js","components/Blacklist.js","components/Settings.js","components/RestaurantCard.js","components/Results.js","components/Reviews.js","components/Comments.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","updateSearch","e","preventDefault","setState","target","name","value","submit","undefined","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","state","categories","radius","term","offset","limit","getTargets","handleRadius","rad","Math","floor","isActive","renderHasRun","runTotal","autocomplete","yelpAutocompleteDebounced","debounce","yelpAutocomplete","suggestions","this","searchURL","fetch","headers","Authorization","then","res","json","data","pushing","terms","length","i","push","text","map","elt","key","onClick","suggestionSelect","changeActive","bind","onSubmit","className","type","placeholder","onChange","onTextChanged","renderSuggestions","isColor","Component","MenuBar","accountSettings","reviewsButton","loggedIn","href","handleSettings","welcomeButton","loginLogoutButton","loginPopup","handleLogout","isSize","hasTextAlign","style","marginLeft","marginRight","React","Popup","updateCred","getAttribute","usernameBox","passBox","updateMode","modeButton","switchModeText","textInfo","isSignUp","errorMessage","submitHandler","a","async","axios","method","url","pass","incrementUsersStat","console","log","result","setStateApp","localStorage","setItem","setTimeout","closePopup","jwt","retrieveUserData","showPopup","class","status","isHorizontal","isGrouped","username","password","handleUserDone","isLink","isAlign","BlacklistButton","restaurant","location","display_address","join","id","onDelete","Blacklist","blacklist","item","padding","saveSettings","closeSettings","RestaurantCard","imageURL","phone","address","distance","category","price","rating","cardGoogleURL","split","src","toFixed","isCentered","isFullWidth","updateIndex","newResults","rel","Results","restaurantName","index","outOfResults","newResultsPassed","render","results","filter","checkBlacklist","image_url","title","Review","updateReview","uploadPost","window","reload","review","getItem","create","baseURL","post","response","catch","error","isHovered","ali","events","comb","pubRoot","get","user","updateBoxes","c","getData","color","slice","reverse","Welcome","login","require","apiKey","App","queryString","checkCats","checkRad","checkSearch","checkOffset","checkLimit","Accept","hasrun","setBlacklist","list","showSettings","toggleSettings","toDelete","toDelIndex","newList","each","splice","updateBlacklist","basename","process","togglePopup","path","exact","strict","businesses","addToBlacklist","isFull","hasTextColor","cancelSettings","deleteBlacklistItem","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f752d93b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { debounce } from 'throttle-debounce';\r\nimport './Search.css';\r\nimport {\r\n  Label,\r\n  Control,\r\n  Input,\r\n  Button,\r\n  Panel,\r\n  Modal,\r\n  ModalCard,\r\n  Container,\r\n  ModalCardHeader,\r\n  ModalCardBody,\r\n  ModalCardFooter,\r\n  ModalCardTitle,\r\n  ModalBackground,\r\n  PanelBlock,\r\n} from \"bloomer\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: \"\", //(required)\r\n      longitude: \"\", //(required)\r\n      categories: \"\", //delimited strong of categories (optional)\r\n      radius: \"\", //(optional)\r\n      term: \"\", //(optional) -> search term \r\n      offset: \"\", //(optional)\r\n      limit: \"\", //(optional)\r\n      isActive: false,\r\n      renderHasRun: false,\r\n      runTotal: 0,\r\n      autocomplete: [],\r\n    };\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude\r\n      });\r\n\t});\r\n\tthis.yelpAutocompleteDebounced = debounce(50, this.yelpAutocomplete);\r\n    this.suggestions = [];\r\n  }\r\n\r\n  updateSearch = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  submit = (e) => {\r\n    if (e !== undefined) { e.preventDefault(); } //event will never be undefined?\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude\r\n      });\r\n    });\r\n    // this.props.history.push(`latitude=${this.state.latitude}&\r\n    //                         longitude=${this.state.longitude}&\r\n    //                         categories=${this.state.categories}&\r\n    //                         radius=${this.state.radius}&\r\n    //                         term=${this.state.term}&\r\n    //                         offset=${this.state.offset}&\r\n    //                         limit=${this.state.limit}`);\r\n    const {\r\n      latitude,\r\n      longitude,\r\n      categories,\r\n      radius,\r\n      term,\r\n      offset,\r\n      limit\r\n    } = this.state; \r\n    this.props.getTargets(\r\n      latitude,\r\n      longitude,\r\n      categories,\r\n      radius,\r\n      term,\r\n      offset,\r\n      limit\r\n    );\r\n  };\r\n\r\n  changeActive() {\r\n    this.setState({ isActive: !this.state.isActive });\r\n  }\r\n\r\n  handleRadius = (e) => {\r\n    e.preventDefault();\r\n    let rad = e.target.value * 1609.344;\r\n    if (rad > 40000) {\r\n      rad = 40000;\r\n    }\r\n    this.setState({\r\n      radius: Math.floor(rad)\r\n    });\r\n  };\r\n\r\n  async yelpAutocomplete() {\r\n    let yelpKey = `VxGmGdflQDo8ChLJQaQ4gQFBsJ_2qpGd74Xmvo72DGyAGLayLv20T6Q8snm2SIH_Q5dQ-8YQnLIfnomJQzxroI0TqR2mu6b2mF-Mo4en1WbdJgBv9Q01iHbDWpDyXXYx`; //our yelp api key\r\n\r\n    let searchURL = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/autocomplete?\";\r\n    \r\n    searchURL =\r\n      searchURL + `text=${this.state.term}&latitude=${this.state.latitude}&longitude=${this.state.longitude}`; //appends everything.\r\n\r\n    fetch(`${searchURL}`, {\r\n      headers: { Authorization: \"Bearer \" + yelpKey }\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        let pushing = [];\r\n        if (data !== undefined && data.terms !== undefined && data.terms.length > 0) {\r\n          for (let i = 0; i < data.terms.length; i++) {\r\n            pushing.push(data.terms[i].text);\r\n          }\r\n\t\t}\r\n\t\tthis.suggestions = pushing;\r\n      });\r\n      //console.log(pushing)\r\n  }\r\n\r\n  onTextChanged() {\r\n    if (this.state.term !== \"\"){\r\n      this.yelpAutocompleteDebounced();\r\n    }\r\n  }\r\n\r\n  renderSuggestions() {\r\n    if (this.suggestions.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <ul>\r\n        {this.suggestions.map((elt => \r\n\t\t\t<li key={elt} onClick={() => {\r\n\t\t\t\tthis.suggestionSelect(elt); \r\n\t\t\t\tthis.suggestions=[];\r\n\t\t\t\t}}>\r\n\t\t\t\t{elt}\r\n\t\t\t</li>))}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  suggestionSelect (value) {\r\n    this.setState({term : value});\r\n  }\r\n\r\n  //need to add categories in this - combo box\r\n  render() {\r\n    if (!this.state.renderHasRun && this.state.longitude !== \"\" && this.state.latitude !== \"\") {\r\n      this.submit();\r\n      this.setState({\r\n        renderHasRun: true\r\n      });\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Button onClick={this.changeActive.bind(this)}>\r\n          Choose your filter!\r\n              </Button>\r\n        <form onSubmit={this.submit}>\r\n          <Modal isActive={this.state.isActive}>\r\n            <ModalBackground />\r\n            <ModalCard>\r\n              <ModalCardHeader>\r\n                <ModalCardTitle>Filters!</ModalCardTitle>\r\n              </ModalCardHeader>\r\n              <ModalCardBody>\r\n                <Panel>\r\n                  <PanelBlock>\r\n                    <Label>Search Term</Label>\r\n                    &nbsp; &nbsp;\r\n                    <Control className='autocomplete'>\r\n                      <Input\r\n                        name=\"term\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter restaurant\"\r\n                        value={this.state.term}\r\n                        onChange={(e) => {\r\n                          this.updateSearch(e);\r\n                          this.onTextChanged();\r\n                        }}\r\n                      ></Input>\r\n                      {this.renderSuggestions()}\r\n                    </Control>\r\n                  </PanelBlock>\r\n                  <PanelBlock>\r\n                    <Label>Category</Label>\r\n                    &nbsp; &nbsp; &nbsp;\r\n                    <Control>\r\n                      <Input\r\n                        name=\"categories\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Categories\"\r\n                        value={this.state.categories}\r\n                        onChange={this.updateSearch}\r\n                      ></Input>\r\n                    </Control>\r\n                  </PanelBlock>\r\n                  <PanelBlock>\r\n                    <Label>Search Radius</Label>\r\n                    <Control>\r\n                      <Input\r\n                        name=\"radius\"\r\n                        type=\"text\"\r\n                        placeholder=\"Radius in miles\"\r\n                        onChange={this.handleRadius}\r\n                      ></Input>\r\n                    </Control>\r\n                  </PanelBlock>\r\n                  {/* <PanelBlock>\r\n                    <Label>Offset Limit</Label>\r\n                    <Control>\r\n                      <Input\r\n                        name=\"offset\"\r\n                        type=\"text\"\r\n                        placeholder=\"Offset the list of businesses\"\r\n                        onChange={this.updateSearch}\r\n                      ></Input>\r\n                    </Control>\r\n                  </PanelBlock>\r\n                  <PanelBlock>\r\n                    <Label>Result Limit</Label>\r\n                    <Control>\r\n                      <Input\r\n                        name=\"limit\"\r\n                        type=\"text\"\r\n                        placeholder=\"Limit\"\r\n                        onChange={this.updateSearch}\r\n                      ></Input>\r\n                    </Control>\r\n                  </PanelBlock> */}\r\n                </Panel>\r\n              </ModalCardBody>\r\n              <ModalCardFooter>\r\n                <Button\r\n                  isColor=\"primary\"\r\n                  type=\"submit\"\r\n                  onClick={this.changeActive.bind(this)}\r\n                >\r\n                  Search\r\n              </Button>\r\n                <Button\r\n                  isColor=\"warning\"\r\n                  onClick={this.changeActive.bind(this)}\r\n                >\r\n                  Cancel\r\n              </Button>\r\n              </ModalCardFooter>\r\n            </ModalCard>\r\n          </Modal>\r\n        </form>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from \"react\";\n//import ReactDOM from 'react-dom';\nimport {\n  Navbar,\n  NavbarItem,\n  NavbarMenu,\n  NavbarStart,\n  NavbarEnd,\n  HeroFooter,\n  Hero,\n  HeroBody,\n  Container,\n  Title\n} from \"bloomer\";\n//import './Menubar.css'\n\nexport default class MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  \n\n  render() {\n    let accountSettings = null;\n    let reviewsButton=null\n    if (this.props.loggedIn != null) {\n      reviewsButton = (\n        <NavbarItem href=\"reviews\">Reviews</NavbarItem>\n      )\n      accountSettings = (\n        <NavbarItem onClick={this.props.handleSettings} href=\"#\">\n          {this.props.loggedIn}'s Account Settings\n        </NavbarItem>\n      );\n    }\n\n\n    let welcomeButton = (\n      <NavbarItem href =\"/\">Welcome</NavbarItem>\n    )\n\n    let loginLogoutButton = \n    (<NavbarItem onClick={this.props.loginPopup} href=\"#\">\n      Login\n    </NavbarItem>)\n    if (this.props.loggedIn!=null) {\n      loginLogoutButton = \n      (<NavbarItem onClick={this.props.handleLogout} href=\"#\">\n        Logout\n      </NavbarItem>)\n    }\n\n    return (\n      <Hero isColor=\"info\" isSize=\"1/4\">\n        <HeroBody>\n          <Container hasTextAlign=\"left\">\n            <Title>Tender: Tinder Restaurant Edition</Title>\n          </Container>\n        </HeroBody>\n        <HeroFooter>\n          <Navbar\n            style={{\n              marginLeft: \"14%\",\n              marginRight: \"14%\"\n            }}\n          >\n            <NavbarMenu isActive=\"true\">\n              <NavbarStart>\n                {welcomeButton}\n                <NavbarItem href=\"search\">Search</NavbarItem>\n              </NavbarStart>\n              <NavbarEnd>\n                {reviewsButton}\n                {accountSettings}\n                {loginLogoutButton}\n\n              </NavbarEnd>\n            </NavbarMenu>\n          </Navbar>\n        </HeroFooter>\n      </Hero>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { \n    Container,\n    Box,\n    Field, \n    Label, \n    Control,\n    Input, \n    Button \n} from 'bloomer';\nimport axios from 'axios';\n\n//testing login popup:\n\n\n\nexport default class Popup extends Component {\n    constructor() {\n        super();\n        this.state={\n            showPopup:false,\n            isSignUp:false,\n            textInfo: \"Log In\",\n            usernameBox: \"\",\n            passBox: \"\",\n            switchModeText: \"Don't have an account?\",\n            modeButton: \"Sign Up\",\n            errorMessage: \"\"\n        }\n    }\n\n    //monitors UN and PW boxes\n    updateCred = (e) => {\n        e.preventDefault();\n        if (e.target.getAttribute('name')===\"username\") {\n            this.setState({usernameBox: e.target.value})\n        } else if (e.target.getAttribute('name')===\"password\") {\n            this.setState({passBox: e.target.value})\n        }\n    }\n\n    //monitors mode button\n    updateMode = (e) => {\n        e.preventDefault();\n        if (e.target.getAttribute('status')===\"Sign Up\") {\n            this.setState({\n                modeButton: \"Log In\",\n                switchModeText: \"Already have an account?\",\n                textInfo: \"Sign Up\",\n                isSignUp: true\n            })\n            this.setState({errorMessage: \"\"})\n        } else if (e.target.getAttribute('status')===\"Log In\") {\n            this.setState({\n                modeButton: \"Sign Up\",\n                switchModeText: \"Don't have an account?\",\n                textInfo: \"Log In\",\n                isSignUp: false\n            })\n            this.setState({errorMessage: \"\"})\n        }\n    }\n\n    //Submit Handler\n    submitHandler = async (e) => {  \n        e.preventDefault()\n        // console.log(e.target)\n        // console.log(e.target.getAttribute('status')) \n        // console.log('Look i am submitting stuff woooo');\n          if (e.target.getAttribute('status')===\"Sign Up\") {\n            try {\n                const result = await axios({\n                  method: 'post',\n                  url: 'http://localhost:3000/account/create',\n                  data: {\n                      name: this.state.usernameBox,\n                      pass: this.state.passBox\n                  }\n                });\n\n                // try{\n                //     const setup = await axios({ //underlying data setup for account\n                //         method: 'post',\n                //         url: `http://localhost:3000/user/${this.props.loggedIn}`,\n                //         data: {\n                //             blacklist: []\n                //         }\n                //     })\n                //     console.log(\"success\")\n                // } catch (error) {\n                //     console.log(error)\n                // }\n\n                this.setState({\n                    modeButton: \"Sign Up\",\n                    switchModeText: \"Don't have an account?\",\n                    textInfo: \"Log In\",\n                    isSignUp: false\n                })\n                this.setState({errorMessage: \"Thanks for signing up, you may now log in!\"})\n                this.props.incrementUsersStat(this.state.usernameBox)\n\n              } catch (error) {\n                console.log(error);\n                this.setState({errorMessage: \"Account already exists with that name!\"})\n              }\n        } else if (e.target.getAttribute('status')===\"Log In\") {\n            try {\n                const result = await axios({\n                  method: 'post',\n                  url: 'http://localhost:3000/account/login',\n                  data: {\n                      name: this.state.usernameBox,\n                      pass: this.state.passBox\n                  }\n                });\n                // console.log(\"success\")\n                this.props.setStateApp({\n                    loggedIn: this.state.usernameBox\n                })\n                localStorage.setItem('loggedIn', this.state.usernameBox)\n                \n                setTimeout(this.props.closePopup, 1000)\n\n                localStorage.setItem('jwt', result.data.jwt)\n                // console.log(localStorage.getItem('jwt'))\n                this.setState({errorMessage: \"\"})\n                // console.log(this.props.loggedIn)\n\n                this.props.retrieveUserData()\n\n              } catch (error) {\n                console.log(error);\n                this.setState({errorMessage: \"The username and password you entered did not match our records. Please double-check and try again.\"})\n              }\n        }\n    }\n\n    render() {\n      if (this.props.loggedIn!=null) {\n          return(\n            <div className='popup'>\n            <div className='popup_inner'>\n              <br></br>\n              <h1 class=\"title\">Log In Successful!</h1>\n              \n            </div>\n          </div>\n          )\n      }\n      \n      return (\n        <div className='popup'>\n          <div className='popup_inner'>\n            <br></br>\n            <h1 class=\"title\">{this.state.textInfo}:</h1>\n            <Box>\n                <Container>\n                    <form status={this.state.textInfo} onSubmit={this.submitHandler}>\n                        <Field isHorizontal>\n                            <Label isSize=\"large\">Username:</Label>\n                            &nbsp; &nbsp;\n                            <Control>\n                                <Input name=\"username\" type=\"text\" placeholder=\"Username\" onChange={this.updateCred}></Input>\n                            </Control>\n                        </Field>\n                        <Field isHorizontal>\n                            <Label isSize=\"large\">Password:</Label>\n                            &nbsp; &nbsp; &nbsp;\n                            <Control>\n                                <Input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.updateCred}></Input>\n                            </Control>\n                        </Field>\n                        <Field isGrouped>\n                            <Control><Button isSize=\"large\" isColor='primary' type='submit' status={this.state.textInfo} username={this.state.usernameBox} password={this.state.passBox} onClick={this.props.handleUserDone}>{this.state.textInfo}</Button></Control>\n                            <Control><Button isSize=\"large\" isColor='primary' type='button' isLink onClick={this.props.closePopup}>Cancel</Button></Control>\n                            <Label isColor='red'>{this.state.errorMessage}</Label>\n                        </Field>\n                    </form>\n                </Container>\n                <br/><br/>\n                <Container>\n                    <h2 class=\"subtitle\">{this.state.switchModeText}</h2>\n                    <Field>\n                        <Control isAlign='center'>\n                            <Button isSize=\"large\" isColor='primary' status={this.state.modeButton} onClick={this.updateMode}>{this.state.modeButton}</Button>\n                        </Control>\n                    </Field>\n                </Container>\n            </Box>\n          </div>\n        </div>\n      );\n    }\n}\n  \n","import React, { Component } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Label,\r\n  Field,\r\n  FieldLabel,\r\n  FieldBody\r\n} from \"bloomer\";\r\n\r\nclass BlacklistButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Box>\r\n        <Field isGrouped>\r\n        <FieldLabel><Label>{this.props.restaurant.name}, {this.props.restaurant.location.display_address.join(\" \")}</Label></FieldLabel>\r\n        <FieldBody><Button id={this.props.restaurant.id} onClick={this.props.onDelete}>DELETE</Button></FieldBody>\r\n        </Field>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlacklistButton;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Label, Column } from \"bloomer\";\r\nimport BlacklistButton from \"./BlacklistButton\";\r\n\r\nclass Blacklist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        \r\n        };\r\n    }\r\n\r\n  render() {\r\n    if (this.props.blacklist === \"none\" || this.props.blacklist === undefined || this.props.blacklist===null) {\r\n        return null;\r\n      }\r\n    \r\n      if (this.props.blacklist.length === 0) {\r\n        return (\r\n          <Container>\r\n            <Label>No Restaurants on Blacklist</Label>\r\n          </Container>\r\n        );\r\n      }\r\n    \r\n      return (\r\n        <Column isSize=\"1/2\">\r\n          {this.props.blacklist.map(item => {\r\n            return (\r\n              <BlacklistButton\r\n                restaurant={item}\r\n                onDelete={this.props.onDelete}\r\n              />\r\n            );\r\n          })}\r\n        </Column>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Blacklist;","import React, { Component } from 'react';\nimport { Box, Field, Control, Button } from 'bloomer';\nimport Blacklist from './Blacklist'\n\n//testing login popup:\n\n\n\nexport default class Popup extends Component {\n    constructor() {\n        super();\n        this.state={\n            showPopup:false,\n        }\n    }\n\n    render() {\n      \n      return (\n        <div className='settingspopup'>\n          <div style={{padding: '15px'}} className='settingspopup_inner'>\n            <br></br>\n            <h1 class=\"title\">{this.props.loggedIn}'s Settings:</h1>\n            <Box>\n                <h2 class=\"subtitle\">Disliked Restaurants:</h2>\n                <Field>\n                  <Blacklist blacklist={this.props.blacklist} onDelete={this.props.onDelete}></Blacklist>\n                </Field>\n            </Box>\n            <br></br>\n            <Box>\n                <Field isGrouped>\n                    <Control><Button isSize=\"large\" isColor='primary' onClick={this.props.saveSettings}>Save</Button></Control>\n                    <Control><Button isSize=\"large\" isColor='primary' type='submit' isLink onClick={this.props.closeSettings}>Cancel</Button></Control>\n                </Field>\n            </Box>\n          \n          </div>\n        </div>\n      );\n    }\n}\n  \n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImage,\n  Image,\n  CardContent,\n  Media,\n  MediaContent,\n  Title,\n  Content,\n  Box,\n  Button,\n  Icon,\n  Columns,\n  Column\n} from \"bloomer\";\n\nclass RestaurantCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      imageURL: \"\",\n      phone: \"\",\n      address: \"\",\n      distance: \"\",\n      category: \"\", //primary category for now\n      price: \"\",\n      rating: \"\"\n    };\n  }\n\n  render() {\n    let cardGoogleURL = `https://www.google.com/maps/place/${this.props.address.split(' ').join('+')}`;\n\n    if (this.props.loggedIn !== null) {\n      return (\n        <Card>\n          <CardImage>\n            <Image src={this.props.imageURL} />\n          </CardImage>\n          <CardContent>\n            <Media>\n              <MediaContent>\n                <Title hasTextAlign isSize={4}>\n                  {this.props.name}\n                </Title>\n              </MediaContent>\n            </Media>\n            <Content>\n              {this.props.rating}\n              <Icon className=\"fas fa-star\"></Icon> - {this.props.price} -{\" \"}\n              {this.props.category}\n              <br />\n              {this.props.distance.toFixed(2)} mi. - {this.props.address}\n            </Content>\n          </CardContent>\n          <Box>\n            <Columns isCentered>\n                <Column isSize=\"1/3\">\n                  <Button isColor=\"danger\" isFullWidth \n                    onClick={() => {\n                      this.props.updateIndex(this.props.newResults);\n                      if (this.props.loggedIn !== null)\n                        this.props.blacklist(this.props.result);\n                      }\n                    }\n                  >\n                    <Icon isAlign=\"left\" className=\"fas fa-times\"></Icon>\n                    <span>I don't like this</span>\n                  </Button>\n                </Column>\n                <Column isSize=\"1/3\">\n                  <Button isColor=\"info\" isFullWidth\n                    href={cardGoogleURL}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                  >\n                    <Icon className=\"far fa-star\"></Icon>\n                    <span>Show me this!</span>\n                  </Button>\n                </Column>\n                <Column isSize=\"1/3\">\n                  <Button isColor=\"primary\" isFullWidth \n                    onClick={() => {\n                      this.props.updateIndex(this.props.newResults);\n                    }}\n                  >\n                    <Icon isAlign=\"right\" className=\"far fa-heart\"></Icon>\n                    <span>Save for Later</span>\n                  </Button>\n                </Column>\n            </Columns>\n          </Box>\n        </Card>\n      );\n    }\n    else {\n      return(\n        <Card>\n            <CardImage>\n              <Image src={this.props.imageURL} />\n            </CardImage>\n            <CardContent>\n              <Media>\n                <MediaContent>\n                  <Title hasTextAlign isSize={4}>\n                    {this.props.name}\n                  </Title>\n                </MediaContent>\n              </Media>\n              <Content>\n                {this.props.rating}\n                <Icon className=\"fas fa-star\"></Icon> - {this.props.price} -{\" \"}\n                {this.props.category}\n                <br />\n                {this.props.distance.toFixed(2)} mi. - {this.props.address}\n              </Content>\n            </CardContent>\n            <Box>\n              <Columns isCentered>\n                  <Column isSize=\"1/3\">\n                    <Button isColor=\"info\" isFullWidth\n                      href={cardGoogleURL}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <Icon className=\"far fa-star\"></Icon>\n                      <span>Show me this!</span>\n                    </Button>\n                  </Column>\n                  <Column isSize=\"1/3\">\n                    <Button isColor=\"primary\" isFullWidth \n                      onClick={() => {\n                        this.props.updateIndex(this.props.newResults);\n                      }}\n                    >\n                      <span>Next</span>\n                      <Icon isAlign=\"primary\" className=\"fas fa-arrow-right\"></Icon>\n                    </Button>\n                  </Column>\n              </Columns>\n            </Box>\n          </Card>\n        )\n    }\n  }\n}\n\nexport default RestaurantCard;\n","import React, { Component} from \"react\";\nimport { Column } from \"bloomer\";\nimport RestaurantCard from \"./RestaurantCard\";\n\nclass Results extends Component {\n  static propTypes = {}\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      restaurantName: '',\n      index: 0,\n      outOfResults: false\n    };\n  }\n\n  updateIndex(newResultsPassed) { \n    if (this.state.index === newResultsPassed.length-1) {\n      this.setState({outOfResults: true})\n    }\n    this.setState({ index: this.state.index+1 })\n    this.render();\n    \n  };\n\n  render() {\n    if (this.state.outOfResults==true) {\n      return(\n        <Column isSize=\"1/2\">\n          <h1 className=\"title\">Uh Oh! You have reached your swipe limit for today! If you are really that hungry, refresh and change your filters. Don't be a picky eater next time</h1>\n        </Column>\n      )\n    }\n    if (this.props.results !== undefined) {\n      let newResults = this.props.results.filter(this.props.checkBlacklist)\n      let result = newResults[this.state.index];\n      if (newResults.length==0||result==undefined) {\n        this.state.outOfResults=true\n        return(\n          <Column isSize=\"1/2\">\n            <h1 className=\"title\">Uh Oh! You have reached your swipe limit for today! If you are really that hungry, refresh and change your filters. Don't be a picky eater next time</h1>\n          </Column>\n        )\n      }\n      return (\n        <Column isSize=\"1/2\">\n          <RestaurantCard\n            result={result}\n            name={result.name}\n            imageURL={result.image_url}\n            phone={result.phone}\n            address={result.location.display_address.join(\" \")}\n            distance={result.distance / 1609.344}\n            category={result.categories[0].title}\n            price={result.price}\n            rating={result.rating}\n            updateIndex={this.updateIndex.bind(this)}\n            blacklist={this.props.blacklist}\n            loggedIn={this.props.loggedIn}\n            newResults={newResults}\n          /><br/>\n        </Column>\n      );\n    }\n    else {\n      return (\n        null\n      );\n    }\n  }\n}\n\nexport default Results","import React, { Component } from 'react';\nimport { Title, Box, Field, Control, Input, Button } from 'bloomer';\nimport axios from 'axios';\n\nexport default class Review extends Component {\n    constructor() {\n        super();\n        this.state = {\n            review : \"\", //(required)\n            username : \"tenderboys\" //(required)\n        }\n    };\n\n    updateReview = e => {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n    submit = e => {\n        e.preventDefault();\n        this.uploadPost();\n        window.location.reload()\n    };\n\n    uploadPost(){\n        let jwt = localStorage.getItem('jwt')\n        const pubRoot = new axios.create({\n            baseURL: \"http://localhost:3000/private\",\n            headers: {Authorization: `Bearer ${jwt}`}\n          });\n        pubRoot.post(`/reviews/`, {\n            data: {review: this.state.review, username: this.props.username},\n            headers: {Authorization: `Bearer ${jwt}`},\n            type: \"merge\"\n          })\n          .then(function (response) {\n          })\n          .catch(function (error) {\n          });\n          \n    }\n\n\n    \n\n    \n      \n    render() {\n\n        return (\n            <Box>\n                <form onSubmit={this.submit}>\n                    <Field>\n                        <Title isSize={3}>Help others out by giving them suggestions!</Title>\n                        <Control>\n                            <Input\n                                class= \"is-rounded\"\n                                name=\"review\"\n                                type=\"text\"\n                                placeholder=\"Post Your Review Here\"\n                                onChange={this.updateReview}\n                            ></Input>  \n                        </Control>\n                        <br></br>\n                        <Control>\n                            <Button\n                                isColor=\"link\"\n                                type=\"submit\"\n                                isHovered= \"true\"\n                                ali =\"centered\"\n\n                            >\n                                Post!\n                            </Button>\n                        </Control>\n                    </Field>\n                </form>\n            </Box>\n        );\n    }\n\n}","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Media,\n  MediaContent,\n  Title,\n  Content,\n  Box,\n  Column\n} from \"bloomer\";\nimport axios from \"axios\";\n\nexport default class Review extends Component {\n  constructor() {\n    super();\n    const pubRoot = new axios.create({\n      baseURL: \"http://localhost:3000/public\"\n    });\n\n    this.data = \"\";\n    this.state = {\n      review: \"\", //(required)\n      username: \"\", //(required)\n      events: \"ffefe\",\n      comb: [],\n      reload: 0\n    };\n  }\n\n  getData() {\n    let jwt = localStorage.getItem('jwt')\n    const pubRoot = new axios.create({\n      baseURL: \"http://localhost:3000/private\"\n    });\n \n    let comb = this.state.comb;\n    pubRoot\n      .get(\"/reviews\", {headers: {Authorization: `Bearer ${jwt}`},})\n      .then(response => {\n        for (let i = 0; i < response.data.result.length; i++) {\n          comb.push({ review: response.data.result[i].review, user: response.data.result[i].username })\n        }\n        this.updateBoxes( comb).bind(this);\n      })\n      .catch(function (error) { });\n  }\n\n  updateBoxes(c) {\n    this.setState({\n      comb: c\n    });\n  }\n\n  render() {\n    if (this.state.reload < 1) {\n      this.getData();\n      this.setState({\n        reload: 1\n      });\n    }\n    if (this.state.comb.length === 0) {\n      return (\n        <Box>\n          <Title>\n            No Restaurant Suggestions Have Yet Been Uploaded. Be the first to Suggest!\n          </Title>\n        </Box>\n      )\n    }\n\n    return (\n      <Column hasTextAlign=\"centered\" isSize=\"1\" color=\"primary\">\n        {this.state.comb.slice(0).reverse().map(result => {\n          return (\n          \n          <Card color=\"primary\">\n            <CardContent>\n              <Media>\n                <MediaContent>\n                  <Title hasTextAlign isSize={3}>\n                    {\"@\" + result.user + \" says:\"}\n                  </Title>\n                </MediaContent>\n              </Media>\n              <Content>\n                <Title isSize={5} hasTextAlign=\"left\">\n                  {result.review}\n                </Title>\n              </Content>\n            </CardContent>\n          </Card>\n        )\n\n        }\n\n        )}\n        \n      </Column>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Title, Box } from \"bloomer\";\nimport axios from \"axios\";\n\nexport default class Welcome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      comb: [],\n      login: \"\"\n    };\n    this.getData();\n  }\n\n  getData() {\n    const pubRoot = new axios.create({\n      baseURL: \"http://localhost:3000/public\"\n    });\n\n    let comb = this.state.comb;\n    pubRoot\n      .get(\"/users\")\n      .then(response => {\n        comb.push(response.data.result.length);\n        this.updateBoxes(comb);\n      })\n      .catch(function(error) {});\n  }\n\n  updateBoxes(c) {\n    this.setState({\n      comb: c\n    });\n  }\n\n  render() {\n    if (this.state.comb[0] === 0) {\n      return (\n        <Box>\n          <Title>\n            We currently have {this.state.comb[0]} hungry people like you using\n            our site. Be the first to get top insight to best local foods\n          </Title>\n          <h1>Sign up to be the First User on the Site!</h1>\n        </Box>\n      );\n    }\n\n    return (\n      <Box>\n        <Title>Welcome to Tender</Title>\n        <h4>\n          Join the more than {this.state.comb[0]} users currently finding great\n          food on our site!\n        </h4>\n        <br></br>\n        <br></br>\n        <p>\n          From the producers of TINDER (jk), comes the new restaurants matching\n          app. Get Paired with the best local restaurants with a click of a\n          button. Use the search tab to start looking for restaurants near your\n          location. Make sure to turn on location services for a pleasurable\n          experience.\n        </p>\n        <br />\n        <p>\n          Logging in will give you additional features, like reviewing and more!\n          So sign-up now!{\" \"}\n        </p>\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Search from \"./components/Search/Search\";\r\nimport MenuBar from \"./components/Menubar\";\r\nimport Popup from \"./components/Popup\";\r\nimport Settings from \"./components/Settings\";\r\nimport Results from \"./components/Results\";\r\nimport Review from \"./components/Reviews\";\r\nimport Comments from \"./components/Comments\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport axios from 'axios';\r\nimport \"./App.css\";\r\nimport {\r\n  Container,\r\n  Columns,\r\n  Footer,\r\n  Content,\r\n  Column,\r\n  Icon\r\n} from \"bloomer\";\r\n\r\nconst fetch = require(\"node-fetch\");\r\n//const clientID = `jxpavrW-66I3Obpstl8qYA`; //our yelp API client id\r\nconst apiKey = `VxGmGdflQDo8ChLJQaQ4gQFBsJ_2qpGd74Xmvo72DGyAGLayLv20T6Q8snm2SIH_Q5dQ-8YQnLIfnomJQzxroI0TqR2mu6b2mF-Mo4en1WbdJgBv9Q01iHbDWpDyXXYx`; //our yelp api key\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    if (localStorage.getItem('loggedIn') === \"null\") {\r\n      this.state={\r\n        showPopup: false,\r\n        loggedIn: null, //string username of logged in user, default null\r\n        blacklist: null,\r\n  \r\n        results: \"none\", //array of returned items from api call\r\n  \r\n        latitude: \"\", //(required)\r\n        longitude: \"\", //(required)\r\n        categories: \"\", //delimited strong of categories (optional)\r\n        radius: \"\", //(optional)\r\n        term: \"\", //(optional)\r\n        offset: 0, //(optional)\r\n        limit: \"\", //(optional)\\\r\n        hasrun: false\r\n      }\r\n    } else {\r\n      this.state = {\r\n        showPopup: false,\r\n        loggedIn: localStorage.getItem('loggedIn'), //string username of logged in user, default null\r\n        blacklist: null,\r\n  \r\n        results: \"none\", //array of returned items from api call\r\n  \r\n        latitude: \"\", //(required)\r\n        longitude: \"\", //(required)\r\n        categories: \"\", //delimited strong of categories (optional)\r\n        radius: \"\", //(optional)\r\n        term: \"\", //(optional)\r\n        offset: 0, //(optional)\r\n        limit: \"\", //(optional)\\\r\n        hasrun: false\r\n      };\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.setState({\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude\r\n      });\r\n    });\r\n  }\r\n\r\n  getTargets = (\r\n    latitude,\r\n    longitude,\r\n    categories,\r\n    radius,\r\n    term,\r\n    offset,\r\n    limit\r\n  ) => {\r\n    let queryString = `https://api.yelp.com/v3/businesses/search?`;\r\n\r\n    //checks for parameters empty or undefined\r\n    const checkLat = latitude === undefined || latitude === \"\";\r\n    const checkLong = longitude === undefined || longitude === \"\";\r\n    const checkCats = categories === undefined || categories === \"\";\r\n    const checkRad = radius === undefined || radius === \"\";\r\n    const checkSearch = term === undefined || term === \"\";\r\n    const checkOffset = offset === undefined || offset === \"\";\r\n    const checkLimit = limit === undefined || limit === \"\";\r\n\r\n    if (\r\n      checkLat &&\r\n      checkLong &&\r\n      checkCats &&\r\n      checkRad &&\r\n      checkSearch &&\r\n      checkOffset &&\r\n      checkLimit\r\n    ) {\r\n      queryString = \"\";\r\n    } else {\r\n      queryString += `latitude=${latitude}&longitude=${longitude}`;\r\n      if (!checkCats) {\r\n        queryString += `&categories=restaurants,${categories}`;\r\n      } else {queryString += `&categories=restaurants`}\r\n      if (!checkRad) {\r\n        queryString += `&radius=${radius}`;\r\n      }\r\n      if (!checkSearch) {\r\n        queryString += `&term=${term}`;\r\n      }\r\n      if (!checkOffset) {\r\n        queryString += `&offset=${offset}`;\r\n      }\r\n      if (!checkLimit) {\r\n        queryString += `&limit=${limit}`;\r\n      } else {queryString += `&limit=50`}\r\n    }\r\n\r\n    fetch(`https://cors-anywhere.herokuapp.com/${queryString}`, {\r\n      headers: { Authorization: `Bearer ${apiKey}` },\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\"\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //console.log(queryString)\r\n        this.setState({\r\n          results: data,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          categories: categories,\r\n          radius: radius,\r\n          term: term,\r\n          offset: offset,\r\n          limit: limit,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          results: \"none\",\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          categories: categories,\r\n          radius: radius,\r\n          term: term,\r\n          offset: offset,\r\n          limit: limit,\r\n        });\r\n      });\r\n  };\r\n\r\n  // function that controls the login popup\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  //function that logs you out\r\n  handleLogout() {\r\n    this.setState({\r\n      loggedIn: null\r\n    });\r\n    localStorage.setItem('loggedIn', null);\r\n    localStorage.setItem('jwt', null);\r\n    window.location.reload();\r\n  }\r\n\r\n  //handles intialization of blacklist on account login\r\n  async retrieveUserData() {\r\n    let jwt = localStorage.getItem('jwt')\r\n    try {\r\n       \r\n      const result = await axios({\r\n        method: 'get',\r\n        url: `http://localhost:3000/user/blacklist`,\r\n        headers: {Authorization: `Bearer ${jwt}`},\r\n      });\r\n      this.setBlacklist(result.data.result)\r\n    } catch (error) {\r\n      const result = await axios({\r\n        method: 'post',\r\n        url: `http://localhost:3000/user/blacklist`,\r\n        headers: {Authorization: `Bearer ${jwt}`},\r\n        data: {data: []}\r\n      });\r\n      this.setBlacklist([])\r\n    }\r\n\r\n  }\r\n\r\n  // function that sets blacklist local value\r\n  setBlacklist(list) {\r\n    this.setState({\r\n      blacklist: list\r\n    })\r\n  }\r\n\r\n  //updates blacklist on backend\r\n  async updateBlacklist() {\r\n    let jwt = localStorage.getItem('jwt')\r\n    const result = await axios({\r\n      method: 'post',\r\n      url: `http://localhost:3000/user/blacklist`,\r\n      headers: {Authorization: `Bearer ${jwt}`},\r\n      data: {data: this.state.blacklist}\r\n    });\r\n  }\r\n\r\n  // function that controls the login popup\r\n  toggleSettings() {\r\n    this.setState({\r\n      showSettings: !this.state.showSettings\r\n    });\r\n  }\r\n\r\n  //function that handles account settings button press\r\n  handleSettings(e) {\r\n    this.toggleSettings();\r\n  }\r\n\r\n  handleUserDone(e) {\r\n    // console.log(e.target.getAttribute(\"status\"));\r\n    // console.log(e.target.getAttribute(\"username\"));\r\n    // console.log(e.target.getAttribute(\"password\"));\r\n  }\r\n\r\n  deleteBlacklistItem(e) {\r\n    let toDelete = e.target.getAttribute('id')\r\n    console.log(toDelete)\r\n    let toDelIndex=null\r\n    let newList=this.state.blacklist\r\n    for (let each in newList) {\r\n      if (newList[each].id === toDelete) {\r\n        toDelIndex=each\r\n      }\r\n    }\r\n    newList.splice(toDelIndex, 1)\r\n    this.setBlacklist(newList)\r\n  }\r\n\r\n  addToBlacklist(id) {\r\n    let newList=this.state.blacklist;\r\n    newList.push(id);\r\n    this.setState({\r\n      blacklist: newList\r\n    });\r\n    this.updateBlacklist();\r\n  }\r\n\r\n  saveSettings() {\r\n    this.updateBlacklist()\r\n    this.toggleSettings()\r\n  }\r\n\r\n  cancelSettings() {\r\n    this.retrieveUserData()\r\n    this.toggleSettings()\r\n  }\r\n\r\n  checkBlacklist(restaurant) {\r\n    for (let each in this.state.blacklist) {\r\n      if (this.state.blacklist[each].id === restaurant.id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async incrementUsersStat(user) {\r\n    const pubRoot = new axios.create({\r\n      baseURL: \"http://localhost:3000/public\",\r\n    });\r\n    pubRoot.post(`/users/`, {\r\n      data: {user},\r\n      type: \"merge\"\r\n    })\r\n    \r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasrun) {\r\n      if (this.state.loggedIn!==null) {\r\n        this.retrieveUserData()\r\n      }\r\n      this.setState({hasrun:true})\r\n    }\r\n    // let businessestopass=[];\r\n    // if (this.state.businesses===undefined) {businessestopass=undefined}\r\n    // else {businessestopass=this.state.results.businesses.filter(this.checkBlacklist)}\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <MenuBar\r\n            loggedIn={this.state.loggedIn}\r\n            handleSettings={this.handleSettings.bind(this)}\r\n            loginPopup={this.togglePopup.bind(this)}\r\n            handleLogout={this.handleLogout.bind(this)}\r\n          />\r\n          <br />\r\n          \r\n          <Route\r\n            path=\"/\"\r\n            exact strict\r\n            render={props => (\r\n              <div><Container>\r\n                <Welcome getTargets={this.getTargets}\r\n                         username = {this.state.loggedIn}\r\n                                  {...props} />\r\n                <Columns isCentered></Columns>\r\n              </Container>\r\n              <br></br></div>\r\n            )}\r\n          />\r\n\r\n\r\n          <Route\r\n            path=\"/search\"\r\n            strict\r\n            render={props => (\r\n              <Container>\r\n                <Search getTargets={this.getTargets} {...props} />\r\n                <br></br>\r\n                <Columns isCentered>\r\n                  <Results \r\n                    results={this.state.results.businesses} \r\n                    checkBlacklist={this.checkBlacklist.bind(this)}\r\n                    blacklist={this.addToBlacklist.bind(this)}\r\n                    loggedIn={this.state.loggedIn}\r\n                    {...props}\r\n                  />\r\n                </Columns>\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/reviews\"\r\n            strict\r\n            render={props => (\r\n              <Container>\r\n                <Review getTargets={this.getTargets}\r\n                         username = {this.state.loggedIn}\r\n                                  {...props} />\r\n                <Comments getTargets={this.getTargets} {...props} />\r\n                <Columns isCentered></Columns>\r\n              </Container>\r\n            )}\r\n          />\r\n          <Footer id=\"footer\">\r\n            <Container>\r\n              <Content>\r\n                <Columns>\r\n                  <Column isFull>\r\n                    <p>\r\n                      Made with\r\n                      <Icon\r\n                        hasTextColor=\"danger\"\r\n                        className=\"fa fa-heart\"\r\n                      ></Icon>\r\n                      by Tenderizers\r\n                    </p>\r\n                    <br></br>\r\n                    <p>Stay Hungry My Friends \r\n                    </p>\r\n                  </Column>\r\n                </Columns>\r\n              </Content>\r\n            </Container>\r\n          </Footer>\r\n          <div id=\"loginPopup\">\r\n            {this.state.showPopup ? \r\n                <Popup\r\n                  loggedIn={this.state.loggedIn}\r\n                  closePopup={this.togglePopup.bind(this)}\r\n                  handleUserDone={this.handleUserDone.bind(this)}\r\n                  setStateApp={this.setState.bind(this)}\r\n                  retrieveUserData={this.retrieveUserData.bind(this)}\r\n                  incrementUsersStat={this.incrementUsersStat.bind(this)}\r\n                />\r\n                : null\r\n            }\r\n          </div>\r\n          <div id=\"settingsPopup\">\r\n            {this.state.showSettings ? (\r\n              <Settings\r\n                closeSettings={this.cancelSettings.bind(this)}\r\n                loggedIn={this.state.loggedIn}\r\n                blacklist={this.state.blacklist}\r\n                onDelete={this.deleteBlacklistItem.bind(this)}\r\n                saveSettings={this.saveSettings.bind(this)}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}